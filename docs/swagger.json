{
  "openapi": "3.0.0",
  "info": {
    "title": "Application with swagger docs",
    "version": "1.0.0",
    "description": "My application with swagger docs"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    },
    "schemas": {
      "id": { "type": "string", "format": "uuid" },
      "name": { "type": "string" },
      "preferedGenderId": { "type": "number" },
      "genderId": { "type": "number" },
      "description": { "type": "string" },
      "dateOfBirth": { "type": "string" },
      "SerializedTrack": {
        "type": "object",
        "properties": {
          "uri": { "type": "string", "format": "uri" },
          "popularity": { "type": "number" },
          "name": { "type": "string" },
          "trackId": { "type": "string" },
          "album": { "type": "string" },
          "image": {
            "type": "object",
            "properties": {
              "height": { "type": "number" },
              "url": { "type": "string", "format": "uri" },
              "width": { "type": "number" }
            },
            "required": ["height", "url", "width"]
          },
          "artistName": { "type": "string" }
        },
        "required": ["uri", "popularity", "name", "trackId"]
      },
      "ProfileToShow": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": { "$ref": "#/components/schemas/User/properties/id" },
              "name": { "$ref": "#/components/schemas/User/properties/name" },
              "image": { "type": "string" }
            },
            "required": ["id", "name"]
          },
          "songs": { "type": "array", "items": { "$ref": "#/components/schemas/Track" } }
        },
        "required": ["user", "songs"]
      },
      "SerializedUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "dateOfBirth": { "type": "string", "format": "date-time" },
          "description": { "type": "string" },
          "genderId": { "type": "number" },
          "preferedGenderId": { "type": "number" }
        },
        "required": ["id", "name", "dateOfBirth", "genderId", "preferedGenderId"]
      },
      "Gender": {
        "type": "object",
        "properties": {
          "id": { "type": "number" },
          "name": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "name", "createdAt", "updatedAt"]
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "type": { "type": "string", "enum": ["avatar"] },
          "fileName": { "type": "string" },
          "height": { "type": "number" },
          "width": { "type": "number" },
          "userId": { "type": "string" }
        },
        "required": ["id", "type", "fileName", "userId"]
      },
      "MatchRequest": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "matcherUserId": { "type": "string" },
          "matchedUserId": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "matcherUserId", "matchedUserId"]
      },
      "Match": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "matcherUserId": { "type": "string" },
          "matchedUserId": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "matcherUserId", "matchedUserId"]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "dateOfBirth": { "type": "string", "format": "date-time" },
          "description": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "preferedGenderId": { "type": "number" },
          "genderId": { "type": "number" },
          "userId": { "type": "string" }
        },
        "required": [
          "id",
          "dateOfBirth",
          "createdAt",
          "updatedAt",
          "preferedGenderId",
          "genderId",
          "userId"
        ]
      },
      "Track": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "albumName": { "type": "string" },
          "spotifyUri": { "type": "string", "format": "uri" },
          "spotifyImage": { "type": "string", "format": "uri" },
          "spotifyId": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "userId": { "type": "string" }
        },
        "required": ["id", "createdAt", "updatedAt", "userId"]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" },
          "profileId": { "type": "string" }
        },
        "required": ["id", "name", "email", "createdAt", "updatedAt"]
      }
    },
    "responses": {
      "BadRequestException": {
        "description": "Bad Request Exception",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "BAD_REQUEST" },
                      "code": { "type": "string", "example": "BAD_REQUEST" }
                    },
                    "required": ["message", "code"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "ForbiddenException": {
        "description": "Forbidden Exception",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "FORBIDDEN" },
                      "code": { "type": "string", "example": "FORBIDDEN" }
                    },
                    "required": ["message", "code"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "NotFountException": {
        "description": "Not Fount Exception",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "NOT_FOUND" },
                      "code": { "type": "string", "example": "NOT_FOUND" }
                    },
                    "required": ["message", "code"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "TechnicalException": {
        "description": "Technical Exception",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "TECHNICAL_ERROR" },
                      "code": { "type": "string", "example": "TECHNICAL_ERROR" }
                    },
                    "required": ["message", "code"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      },
      "UnAuthorizedException": {
        "description": "Unauthorized access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": { "type": "string", "example": "Unauthorized access" },
                      "code": { "type": "string", "example": "E_UNAUTHORIZED_ACCESS" }
                    },
                    "required": ["message", "code"]
                  }
                }
              },
              "required": ["errors"]
            }
          }
        }
      }
    }
  },
  "paths": {
    "/api/matches/": {
      "get": {
        "summary": "fav an user",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Match"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": { "$ref": "#/components/schemas/User/properties/id" },
                          "name": { "$ref": "#/components/schemas/User/properties/name" }
                        },
                        "required": ["id", "name"]
                      }
                    },
                    "message": { "type": "string", "example": "Mutual match history" }
                  },
                  "required": ["data", "message"]
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      }
    },
    "/api/spotify/top-five-tracks": {
      "get": {
        "summary": "get user spotify top five tracks",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Spotify"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/SerializedTrack" }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      }
    },
    "/api/spotify/track-by-name": {
      "get": {
        "summary": "get user spotify top five tracks",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Spotify"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/SerializedTrack" }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      }
    },
    "/api/users/{userId}/fav": {
      "get": {
        "summary": "fav an user",
        "security": [{ "bearerAuth": [] }],
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "description": "User id",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "It's a mutual match" }
                  },
                  "required": ["message"]
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" },
          "404": { "$ref": "#/components/responses/NotFountException" }
        }
      }
    },
    "/api/users": {
      "get": {
        "security": [{ "bearerAuth": [] }],
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/ProfileToShow" }
                    }
                  },
                  "required": ["data"]
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      }
    },
    "/api/auth/spotify": {
      "get": { "tags": ["Spotify OAuth"], "responses": { "200": { "description": "Success" } } }
    },
    "/api/auth/logout": {
      "get": {
        "operationId": "logout",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Auth"],
        "responses": {
          "200": { "description": "Success" },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "operationId": "getProfile",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SerializedUser" } }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      },
      "post": {
        "operationId": "createProfile",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "$ref": "#/components/schemas/Profile/properties/name" },
                  "dateOfBirth": { "$ref": "#/components/schemas/Profile/properties/dateOfBirth" },
                  "description": { "$ref": "#/components/schemas/Profile/properties/description" },
                  "preferedGenderId": {
                    "$ref": "#/components/schemas/Profile/properties/preferedGenderId"
                  },
                  "genderId": { "$ref": "#/components/schemas/Profile/properties/genderId" },
                  "trackIds": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/Track/properties/id" }
                  }
                },
                "required": [
                  "name",
                  "dateOfBirth",
                  "description",
                  "preferedGenderId",
                  "genderId",
                  "trackIds"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SerializedUser" } }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      }
    },
    "/api/auth/profile/avatar": {
      "post": {
        "operationId": "uploadAvatar",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Auth"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "description": "Image file to upload as the user's avatar",
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": ["avatar"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/SerializedUser" } }
            }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" }
        }
      },
      "get": {
        "operationId": "getAvatar",
        "summary": "Get user avatar image",
        "security": [{ "bearerAuth": [] }],
        "tags": ["Auth"],
        "responses": {
          "200": {
            "description": "Returns the user avatar image",
            "content": { "image/jpeg": { "schema": { "type": "string", "format": "binary" } } }
          },
          "401": { "$ref": "#/components/responses/UnAuthorizedException" },
          "404": { "$ref": "#/components/responses/NotFountException" }
        }
      }
    }
  },
  "tags": []
}
